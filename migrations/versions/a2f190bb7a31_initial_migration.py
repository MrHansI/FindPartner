"""Initial migration

Revision ID: a2f190bb7a31
Revises: 
Create Date: 2024-08-28 12:55:49.573922

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a2f190bb7a31'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        # Step 1: Add the column with NULLABLE first
        batch_op.add_column(sa.Column('username', sa.String(length=50), nullable=True))

    # Step 2: Update existing rows with a default value (outside of batch_alter_table context)
    op.execute("UPDATE user SET username = 'default_username' WHERE username IS NULL")

    # Step 3: Alter the column to NOT NULL
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('username', nullable=False)

    # Continue with other column alterations and constraints
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('first_name',
                              existing_type=sa.VARCHAR(length=100),
                              type_=sa.String(length=50),
                              nullable=False)
        batch_op.alter_column('last_name',
                              existing_type=sa.VARCHAR(length=100),
                              type_=sa.String(length=50),
                              nullable=False)
        batch_op.alter_column('middle_name',
                              existing_type=sa.VARCHAR(length=100),
                              type_=sa.String(length=50),
                              existing_nullable=True)
        batch_op.alter_column('_password_hash',
                              existing_type=sa.VARCHAR(length=128),
                              nullable=False)
        batch_op.alter_column('relationship_status',
                              existing_type=sa.VARCHAR(length=100),
                              type_=sa.String(length=10),
                              nullable=False)
        batch_op.alter_column('partner_nick',
                              existing_type=sa.VARCHAR(length=100),
                              type_=sa.String(length=50),
                              existing_nullable=True)
        batch_op.create_unique_constraint('uq_user_username', ['username'])
        batch_op.drop_column('display_name')
    # ### end Alembic commands ###



def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('display_name', sa.VARCHAR(length=100), nullable=True))
        batch_op.drop_constraint('uq_user_username', type_='unique')
        batch_op.alter_column('partner_nick',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('relationship_status',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.alter_column('_password_hash',
               existing_type=sa.VARCHAR(length=128),
               nullable=True)
        batch_op.alter_column('middle_name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('last_name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.alter_column('first_name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.drop_column('username')
    # ### end Alembic commands ###

